{"ast":null,"code":"var _jsxFileName = \"/Users/adir.hino/Desktop/ja-moveo/Frontend/src/components/Live.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Live({\n  liveSong,\n  user\n}) {\n  console.log(liveSong);\n  function handleQuit() {}\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"live\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lines\",\n      children: [user == \"admin\" ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"quitButton\",\n        onClick: handleQuit,\n        children: \"quit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 30\n      }, this) : null, liveSong.map((line, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: line.map((word, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [word.chords, /*#__PURE__*/_jsxDEV(\"sup\", {\n              children: [word.lyrics, \"  \"]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 40\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 21\n          }, this)\n        }, void 0, false))\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 16\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 12\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n}\n_c = Live;\n;\nvar _c;\n$RefreshReg$(_c, \"Live\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","Live","liveSong","user","console","log","handleQuit","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","line","index","word","chords","lyrics","_c","$RefreshReg$"],"sources":["/Users/adir.hino/Desktop/ja-moveo/Frontend/src/components/Live.js"],"sourcesContent":["import React from 'react';\n\n\n\nexport default function Live ({liveSong, user}){\n    console.log(liveSong)\n    function handleQuit(){\n        \n    }\n    return (\n        <div className='live'>\n           <div className='lines'>\n           {user == \"admin\"? <button className='quitButton' onClick={handleQuit}>quit</button>:null}\n            { liveSong.map((line, index)=>(\n               <p key={index}>\n                { line.map((word, index)=>(\n                   <>\n                    <span>{word.chords}<sup key={index}>{ word.lyrics }  </sup></span>\n                   </>\n                ))}\n               </p>\n            ))}\n           </div>\n        </div>\n    );\n};\n\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAI1B,eAAe,SAASC,IAAIA,CAAE;EAACC,QAAQ;EAAEC;AAAI,CAAC,EAAC;EAC3CC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;EACrB,SAASI,UAAUA,CAAA,EAAE,CAErB;EACA,oBACIR,OAAA;IAAKS,SAAS,EAAC,MAAM;IAAAC,QAAA,eAClBV,OAAA;MAAKS,SAAS,EAAC,OAAO;MAAAC,QAAA,GACrBL,IAAI,IAAI,OAAO,gBAAEL,OAAA;QAAQS,SAAS,EAAC,YAAY;QAACE,OAAO,EAAEH,UAAW;QAAAE,QAAA,EAAC;MAAI;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,GAAC,IAAI,EACrFX,QAAQ,CAACY,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACxBlB,OAAA;QAAAU,QAAA,EACGO,IAAI,CAACD,GAAG,CAAC,CAACG,IAAI,EAAED,KAAK,kBACpBlB,OAAA,CAAAE,SAAA;UAAAQ,QAAA,eACCV,OAAA;YAAAU,QAAA,GAAOS,IAAI,CAACC,MAAM,eAACpB,OAAA;cAAAU,QAAA,GAAmBS,IAAI,CAACE,MAAM,EAAE,IAAE;YAAA,GAAxBH,KAAK;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAwB,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM;QAAC,gBACjE,CACJ;MAAC,GALKG,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMV,CACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd;AAACO,EAAA,GArBuBnB,IAAI;AAqB3B;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}