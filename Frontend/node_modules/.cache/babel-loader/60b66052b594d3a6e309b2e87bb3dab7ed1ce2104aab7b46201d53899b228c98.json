{"ast":null,"code":"var _jsxFileName = \"/Users/adir.hino/Desktop/ja-moveo/Frontend/src/components/Live.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Live({\n  liveSong,\n  user,\n  setLive,\n  setSongs,\n  currUser\n}) {\n  _s();\n  const lines = useRef(null);\n  const [scrolling, setScrolling] = useState(false);\n  console.log(liveSong);\n  function handleQuit() {\n    setLive(false);\n    setSongs([]);\n  }\n  const startScrolling = () => {\n    setScrolling(true);\n  };\n  const stopScrolling = () => {\n    setScrolling(false);\n  };\n  useEffect(() => {\n    let scrollInterval;\n    if (scrolling) {\n      scrollInterval = setInterval(() => {\n        if (lines.current) {\n          lines.current.scrollTop += 1.6;\n        }\n      }, 100);\n    }\n    return () => {\n      clearInterval(scrollInterval);\n    };\n  }, [scrolling]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"live\",\n    children: [user === \"admin\" && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"quitButton\",\n      onClick: handleQuit,\n      children: \"quit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lines\",\n      ref: lines,\n      children: liveSong.song.map((line, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"line\",\n        children: line.map((word, idx) => /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"lyrics\",\n          children: [currUser.instrument == \"singer\" ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"chords\",\n            children: word.chords\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 63\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"word\",\n            children: word.lyrics\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 24\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 22\n        }, this))\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 20\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `scrollButton ${scrolling ? 'scrolling' : 'not-scrolling'}`,\n      onClick: scrolling ? stopScrolling : startScrolling,\n      children: scrolling ? 'Stop Scrolling' : 'Start Scrolling'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n_s(Live, \"eigIfqBkdLSodJN3s+BcZZzv6CE=\");\n_c = Live;\nvar _c;\n$RefreshReg$(_c, \"Live\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Live","liveSong","user","setLive","setSongs","currUser","_s","lines","scrolling","setScrolling","console","log","handleQuit","startScrolling","stopScrolling","scrollInterval","setInterval","current","scrollTop","clearInterval","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","song","map","line","index","word","idx","instrument","chords","lyrics","_c","$RefreshReg$"],"sources":["/Users/adir.hino/Desktop/ja-moveo/Frontend/src/components/Live.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\n\nexport default function Live({ liveSong, user, setLive, setSongs, currUser }) {\n    const lines = useRef(null);\n    const [scrolling, setScrolling] = useState(false);\n\n    console.log(liveSong)\n\n    function handleQuit() {\n        setLive(false);\n        setSongs([]);\n    }\n\n    const startScrolling = () => {\n        setScrolling(true);\n    };\n\n    const stopScrolling = () => {\n        setScrolling(false);\n    };\n\n    useEffect(() => {\n        let scrollInterval;\n\n        if (scrolling) {\n            scrollInterval = setInterval(() => {\n                if (lines.current) {\n                    lines.current.scrollTop += 1.6; \n                }\n            }, 100);\n        }\n\n        return () => {\n            clearInterval(scrollInterval);\n        };\n    }, [scrolling]);\n\n\n    return (\n        \n        <div className='live'>\n             {user === \"admin\" && (\n                    <button className='quitButton' onClick={handleQuit}>quit</button>\n                )}\n            <div className='lines' ref={lines}>\n                {liveSong.song.map((line, index) => (\n                   <p className='line' key={index}>\n                   {line.map((word, idx) => (\n                     <span className='lyrics' key={idx}>\n                      {currUser.instrument == \"singer\"?<></>: <span className='chords'>{word.chords}</span>}\n                       <span className='word'>{word.lyrics}</span>\n                     </span>\n                   ))}\n                 </p>\n                ))}\n            </div>\n            <button\n            className={`scrollButton ${scrolling ? 'scrolling' : 'not-scrolling'}`}\n            onClick={scrolling ? stopScrolling : startScrolling}\n            >\n                {scrolling ? 'Stop Scrolling' : 'Start Scrolling'}\n            </button>\n        </div>\n    );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}