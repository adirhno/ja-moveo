{"ast":null,"code":"var _jsxFileName = \"/Users/adir.hino/Desktop/ja-moveo/Frontend/src/components/Player.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Player({\n  liveSong,\n  setLive\n}) {\n  _s();\n  const [socket, setSocket] = useState(null);\n  useEffect(() => {\n    const newSocket = io('http://localhost:3001');\n\n    // Listen for connection\n    newSocket.on('connect', () => {\n      console.log(\"Socket ID:\", newSocket.id);\n    });\n    newSocket.on('songSelected', async song => {\n      console.log(\"back from socket\", song);\n      if (song) {\n        setLive(true);\n      } else {\n        setLive(false);\n      }\n    });\n\n    // Listen for quitSession\n\n    return () => {\n      newSocket.off('songSelected');\n      newSocket.off('quitSession');\n      newSocket.disconnect();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Waiting for next song...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n_s(Player, \"NvwYO9vJOwIMt5STdlMKfWhuxZw=\");\n_c = Player;\n;\nvar _c;\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"names":["React","useEffect","useRef","useState","io","jsxDEV","_jsxDEV","Player","liveSong","setLive","_s","socket","setSocket","newSocket","on","console","log","id","song","off","disconnect","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/adir.hino/Desktop/ja-moveo/Frontend/src/components/Player.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { io } from 'socket.io-client';\n\nexport default function Player ({liveSong, setLive}){\n    const [socket, setSocket] = useState(null); \n    useEffect(() => {\n        const newSocket = io('http://localhost:3001');\n\n        // Listen for connection\n        newSocket.on('connect', () => {\n            console.log(\"Socket ID:\", newSocket.id); \n        });\n        \n\n        newSocket.on('songSelected',async (song) => {\n            console.log(\"back from socket\", song);\n            if(song){\n                setLive(true)\n            } else{\n                setLive(false)\n            }\n\n        });\n\n        // Listen for quitSession\n       \n\n        return () => {\n            newSocket.off('songSelected');\n            newSocket.off('quitSession');\n            newSocket.disconnect(); \n        };\n    }, []);\n\n\n    return (\n        <div > \n        <h1>\n        Waiting for next song...\n        </h1>\n        </div>\n    );\n};\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,SAASC,EAAE,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,eAAe,SAASC,MAAMA,CAAE;EAACC,QAAQ;EAAEC;AAAO,CAAC,EAAC;EAAAC,EAAA;EAChD,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC1CF,SAAS,CAAC,MAAM;IACZ,MAAMY,SAAS,GAAGT,EAAE,CAAC,uBAAuB,CAAC;;IAE7C;IACAS,SAAS,CAACC,EAAE,CAAC,SAAS,EAAE,MAAM;MAC1BC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEH,SAAS,CAACI,EAAE,CAAC;IAC3C,CAAC,CAAC;IAGFJ,SAAS,CAACC,EAAE,CAAC,cAAc,EAAC,MAAOI,IAAI,IAAK;MACxCH,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEE,IAAI,CAAC;MACrC,IAAGA,IAAI,EAAC;QACJT,OAAO,CAAC,IAAI,CAAC;MACjB,CAAC,MAAK;QACFA,OAAO,CAAC,KAAK,CAAC;MAClB;IAEJ,CAAC,CAAC;;IAEF;;IAGA,OAAO,MAAM;MACTI,SAAS,CAACM,GAAG,CAAC,cAAc,CAAC;MAC7BN,SAAS,CAACM,GAAG,CAAC,aAAa,CAAC;MAC5BN,SAAS,CAACO,UAAU,CAAC,CAAC;IAC1B,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAGN,oBACId,OAAA;IAAAe,QAAA,eACAf,OAAA;MAAAe,QAAA,EAAI;IAEJ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAACf,EAAA,CAvCuBH,MAAM;AAAAmB,EAAA,GAANnB,MAAM;AAuC7B;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}